@model Restaurant.Models.Type

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm("Create", "Types", FormMethod.Post, new { enctype = "Multipart/form-data" })) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Type</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.RestaurantType, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RestaurantType, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RestaurantType, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Comments, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Comments, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Comments, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" style="margin-left:100px;display:flex;">
            <label for="exampleInputEmail1">Rating: </label>
            <div class="row">
                <div class="col-md-12" >
                    <label class="radio-inline">
                        @Html.RadioButtonFor(p => p.Ratings, 1) 1
                    </label>
                    <label class="radio-inline">
                        @Html.RadioButtonFor(p => p.Ratings, 2) 2
                    </label>
                    <label class="radio-inline">
                        @Html.RadioButtonFor(p => p.Ratings, 3) 3
                    </label>
                    <label class="radio-inline">
                        @Html.RadioButtonFor(p => p.Ratings, 4) 4
                    </label>
                    <label class="radio-inline">
                        @Html.RadioButtonFor(p => p.Ratings, 5) 5
                    </label>
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NameId, "NameId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("NameId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.NameId, "", new { @class = "text-danger" })
            </div>
        </div>

        

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
